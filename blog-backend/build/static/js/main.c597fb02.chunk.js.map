{"version":3,"sources":["components/Togglable.js","components/Blog.js","components/LoginForm.js","components/BlogForm.js","components/Notification.js","components/Users.js","components/User.js","services/login.js","services/blogs.js","services/users.js","reducers/notificationReducer.js","App.js","store.js","index.js"],"names":["Togglable","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","onClick","buttonLabel","className","children","cancelButtonLabel","displayName","Blog","blog","blogUpdate","blogRemove","paddingTop","paddingLeft","border","borderWidth","marginBottom","title","author","url","likes","updatedBlog","id","user","username","window","confirm","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","password","onSubmit","value","onChange","type","BlogForm","createBlog","newBlogTitle","setNewBlogTitle","newBlogAuthor","setNewBlogAuthor","newBlogUrl","setNewBlogUrl","event","preventDefault","console","log","target","Notification","useSelector","state","notification","notificationText","notificationType","backgroundColor","fontSize","width","color","borderRadius","borderStyle","borderColor","Users","userData","users","map","gridTemplateColumns","to","blogs","length","marginLeft","User","exportedObj","login","credentials","a","axios","post","response","data","baseUrl","token","exportedObject","getAll","get","then","setToken","newToken","remove","config","headers","Authorization","delete","update","newObject","put","create","showNotification","time","dispatch","setTimeout","hideNotification","initialState","reducer","action","App","setBlogs","setUsername","setPassword","setUser","setUsers","blogFormRef","useRef","useEffect","blogService","loggedUserJSON","localStorage","getItem","JSON","parse","userService","fetchData","useDispatch","addBlog","blogObject","current","newBlog","concat","blogId","thisBlog","filter","handleLogin","loginService","setItem","stringify","match","useMatch","find","params","name","removeItem","document","location","reload","path","element","sort","min","max","combineReducers","notificationReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c597fb02.chunk.js","sourcesContent":["import React from 'react'\nimport { useState, forwardRef, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div\n        className=\"hiddenByDefault\"\n        style={visible ? { display: '' } : { display: 'none' }}\n      >\n        <div style={showWhenVisible} className=\"togglableContent\">\n          {props.children}\n          <button onClick={toggleVisibility}>{props.cancelButtonLabel}</button>\n        </div>\n      </div>\n    </div>\n  )\n})\n\nTogglable.displayName = 'Togglable'\n\nTogglable.propTypes ={\n  buttonLabel: PropTypes.string.isRequired\n}\n\nexport default Togglable\n\n","import React from 'react'\nimport Togglable from './Togglable'\n\nconst Blog = ({ blog, blogUpdate, blogRemove }) => {\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  }\n\n  const likeHandler = () => {\n    const updatedBlog = { ...blog, likes: blog.likes += 1 }\n    blogUpdate(blog.id, updatedBlog)\n  }\n\n  const removeHandler = () => {\n    window.confirm(`Delete ${blog.title} by ${blog.author}?`) &&\n      blogRemove(blog.id)\n  }\n\n  return (\n    //blog -> blog-container\n    <div style={blogStyle} className='blog-container'>\n      <div>\n        <strong>{blog.title} </strong>\n        by\n        <strong> {blog.author}</strong>\n      </div>\n\n      <Togglable buttonLabel='View' cancelButtonLabel='Hide'>\n        <p>Url: {blog.url}</p>\n        <p className=\"likeContainer\">\n          {blog.likes === 1 ? `${blog.likes} like` : `${blog.likes} likes`}\n          <button onClick={likeHandler} className=\"likeButton\">\n            Like\n          </button>\n        </p>\n        <p>User: {blog.user.username}</p>\n        <button onClick={removeHandler}>Remove</button>\n      </Togglable>\n    </div>\n  )\n}\n\nexport default Blog","import React from 'react'\n\nconst LoginForm = ({\n  handleSubmit,\n  handleUsernameChange,\n  handlePasswordChange,\n  username,\n  password\n}) => {\n  return (\n    <div>\n      <h2>Login</h2>\n\n      <form onSubmit={handleSubmit}>\n        <div>\n                    Username:\n          <input\n            id=\"username\"\n            value={username}\n            onChange={handleUsernameChange}\n          />\n        </div>\n        <div>\n                    Password:\n          <input\n            id=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n          />\n        </div>\n        <button id=\"login-button\" type=\"submit\">\n                    Log In\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default LoginForm","import React, { useState } from 'react'\n\nconst BlogForm = ({ createBlog }) => {\n  const [newBlogTitle, setNewBlogTitle] = useState('')\n  const [newBlogAuthor, setNewBlogAuthor] = useState('')\n  const [newBlogUrl, setNewBlogUrl] = useState('')\n\n  const handleTitleChange = (event) => {\n    console.log(event.target.value)\n    setNewBlogTitle(event.target.value)\n  }\n\n  const handleAuthorChange = (event) => {\n    console.log(event.target.value)\n    setNewBlogAuthor(event.target.value)\n  }\n\n  const handleUrlChange = (event) => {\n    console.log(event.target.value)\n    setNewBlogUrl(event.target.value)\n  }\n\n  const addBlog = (event) => {\n    event.preventDefault()\n    createBlog({\n      title: newBlogTitle,\n      author: newBlogAuthor,\n      url: newBlogUrl\n    })\n\n    setNewBlogTitle('')\n    setNewBlogAuthor('')\n    setNewBlogUrl('')\n  }\n\n  return (\n    <div>\n      <h2>Add a new blog</h2>\n      <form onSubmit={addBlog} id=\"form\">\n        <p>\n                    Title:{' '}\n          <input\n            id=\"titleInput\"\n            value={newBlogTitle}\n            onChange={handleTitleChange}\n            className=\"titleInput\"\n          />\n        </p>\n        <p>\n                    Author:{' '}\n          <input\n            id=\"authorInput\"\n            value={newBlogAuthor}\n            onChange={handleAuthorChange}\n            className=\"authorInput\"\n          />\n        </p>\n        <p>\n                    Url:{' '}\n          <input\n            id=\"urlInput\"\n            value={newBlogUrl}\n            onChange={handleUrlChange}\n            className=\"urlInput\"\n          />\n        </p>\n        <button id=\"newBlogButton\" type=\"submit\">\n                    Add\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default BlogForm\n\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nconst Notification = () => {\n  const { notificationText, notificationType } = useSelector(\n    (state) => state.notification\n  )\n\n  return (\n    notificationText && (\n      <div\n        style={{\n          backgroundColor: 'rgb(197, 188, 188)',\n          fontSize: '1.5rem',\n          width: '30%',\n          color: `${notificationType}`,\n          borderRadius: '4px',\n          marginBottom: '2%',\n          borderWidth: '2px',\n          borderStyle: 'solid',\n          borderColor: `${notificationType}`,\n        }}\n      >\n        {notificationText}\n      </div>\n    )\n  )\n}\n\nexport default Notification","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Users = ({ users }) => {\n  const userData = users.map((user) => (\n    <div\n      key={user.id}\n      style={{\n        display: 'grid',\n        gridTemplateColumns: '1fr, 3fr'\n      }}\n    >\n      <Link to={`/users/${user.id}`}>\n        <p>{user.username}</p>\n      </Link>\n      <p>{user.blogs.length}</p>\n    </div>\n  ))\n\n  return (\n    <div>\n      <h1>Users</h1>\n      <div style={{ marginLeft: '20%' }}>\n        <b>Blogs created</b>\n      </div>\n      <div>{userData}</div>\n    </div>\n  )\n}\n\nexport default Users","import React from 'react'\n\nconst User = ({ author }) => {\n  if(!author) {\n    return null\n  }\n  return (\n    <div>\n      <h2>{author.username}</h2>\n      {author.blogs.length !==0 && (\n        <>\n          <h3>Added blogs</h3>\n          <ul>\n            {author.blogs.map((blog) => (\n              <li key={blog.id}>{blog.title}</li>\n            ))}\n          </ul>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default User","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nconst exportedObj = {\n  login\n}\n\nexport default exportedObj","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nlet token = null\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n  return token\n}\n\nconst create = async (newObject) => {\n  const config = { headers: { Authorization: token } }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then((response) => response.data)\n}\n\nconst remove = (id) => {\n  const config = { headers: { Authorization: token } }\n  const request = axios.delete(`${baseUrl}/${id}`, config)\n  return request.then((response) => response.data)\n}\n\nconst exportedObject = {\n  getAll,\n  setToken,\n  remove,\n  update,\n  create\n}\n\nexport default exportedObject","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nlet token = null\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then((response) => response.data)\n}\n\nconst create = async (newObject) => {\n  const config = { headers: { Authorization: token } }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then((response) => response.data)\n}\n\nconst remove = (id) => {\n  const config = { headers: { Authorization: token } }\n  const request = axios.delete(`${baseUrl}/${id}`, config)\n  return request.then((response) =>  response.data)\n}\n\nconst exportedObject = {\n  getAll,\n  create,\n  update,\n  setToken,\n  remove,\n}\n\nexport default exportedObject","export const showNotification = (notificationText, time, notificationType) => {\n  return async (dispatch) => {\n    dispatch({\n      type: 'SHOW',\n      data: { notificationText, notificationType },\n      time: setTimeout(() => dispatch(hideNotification()), time * 1000)\n    })\n  }\n}\n\nconst hideNotification = () => ({\n  type: 'HIDE'\n})\n\nconst initialState = {\n  notificationText: null,\n  notificationType: 'red'\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'SHOW':\n    return action.data\n  case 'HIDE':\n    return { notificationType: 'transparent', ...initialState }\n  default:\n    return state\n  }\n}\n\nexport default reducer","import React, { useState, useEffect, useRef } from 'react'\nimport { Routes, Route, useMatch } from 'react-router-dom'\nimport Blog from './components/Blog'\nimport LoginForm from './components/LoginForm'\nimport BlogForm from './components/BlogForm'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\nimport Users from './components/Users'\nimport User from './components/User'\nimport loginService from './services/login'\nimport blogService from './services/blogs'\nimport userService from './services/users'\n\nimport { useDispatch } from 'react-redux'\nimport { showNotification } from './reducers/notificationReducer'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const [user, setUser] = useState(null)\n  const [users, setUsers] = useState([])\n\n  const blogFormRef = useRef()\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if(loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const initialState = await userService.getAll()\n      setUsers(initialState)\n    }\n    fetchData()\n  }, [])\n\n  const dispatch = useDispatch()\n\n  const addBlog = async (blogObject) => {\n    blogFormRef.current.toggleVisibility()\n    if (\n      blogObject.title !== '' &&\n      blogObject.author !== '' &&\n      blogObject.url !== ''\n    ) {\n      const newBlog = await blogService.create(blogObject)\n      setBlogs(blogs.concat(newBlog))\n\n      dispatch(\n        showNotification(\n          `A new blog ${blogObject.title} by ${blogObject.author} added`, 5, 'green'\n        )\n      )\n    } else {\n      dispatch(\n        showNotification(\n          'You must fill all fields in order to add a blog',\n          5,\n          'red'\n        )\n      )\n    }\n  }\n\n  const blogUpdate = async (blogId, blogObject) => {\n    await blogService.update(blogId, blogObject)\n\n    const updatedBlog = { ...blogObject, blogId }\n\n    setBlogs(\n      blogs.map((blog) => (blog.id === updatedBlog.id ? updatedBlog : blog))\n    )\n  }\n\n  const blogRemove = async (blogId) => {\n    await blogService.remove(blogId)\n    const thisBlog = blogs.filter((blog) => blog.id === blogId)\n    setBlogs(blogs.filter((blog) => blog.id !== blogId))\n\n    dispatch(\n      showNotification(\n        `Blog ${thisBlog[0].title} by ${thisBlog[0].author} was succesfully deleted`,\n        5,\n        'green'\n      )\n    )\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      })\n\n      window.localStorage.setItem(\n        'loggedBlogAppUser', JSON.stringify(user)\n      )\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n      dispatch(\n        showNotification(`User ${user.username} is logged in`, 5, 'green')\n      )\n    } catch (exception) {\n      dispatch(showNotification('Wrong username or password', 5, 'red'))\n    }\n  }\n\n  const handleLogOut = () => {\n    window.localStorage.removeItem('loggedBlogappUser')\n    document.location.reload()\n  }\n\n  const loginForm = () => (\n    <Togglable buttonLabel='Log in' ref={blogFormRef} cancelButtonLabel=\"cancel\" >\n      <LoginForm\n        username={username}\n        password={password}\n        handleUsernameChange={({ target }) => setUsername(target.value)}\n        handlePasswordChange={({ target }) => setPassword(target.value)}\n        handleSubmit={handleLogin}\n      />\n    </Togglable>\n  )\n\n  const blogForm = () => (\n    <Togglable buttonLabel='New blog'\n      cancelButtonLabel=\"cancel\"\n      ref={blogFormRef}\n    >\n      <BlogForm createBlog={addBlog} />\n    </Togglable>\n  )\n\n  const match = useMatch('/users/:id')\n  const author = match\n    ? users.find((author) => author.id === match.params.id)\n    : null\n\n  return (\n    <div>\n      <h2>Blogs</h2>\n      {user && (\n        <div>\n          {user.name} is logged in\n          <button onClick={handleLogOut}>Logout</button>\n        </div>\n      )}\n\n      <Notification />\n\n      <Routes>\n        <Route path='/users/:id' element={<User author={author} />} />\n        <Route path='/users' element={<Users users={users} />} />\n\n        <Route path='/' element={\n          <div>\n            {user === null ? (\n              loginForm()\n            ) : (\n              <>\n                {blogForm()}\n                <div>\n                  {blogs\n                    .sort((min, max) => max.likes - min.likes)\n                    .filter((blog) => blog.user.username === user.username)\n                    .map((blog) => (\n                      <Blog\n                        key={blog.id}\n                        blog={blog}\n                        blogUpdate={blogUpdate}\n                        blogRemove={blogRemove}\n                      />\n                    ))}\n                </div>\n              </>\n            )}\n          </div>\n        } />\n\n      </Routes>\n    </div>\n  )\n}\n\n\nexport default App","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport notificationReducer from './reducers/notificationReducer'\n\nconst reducer = combineReducers({\n  notification: notificationReducer\n})\n\nconst store =createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport store from './store'\nimport './index.css'\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n)"],"sourceRoot":""}